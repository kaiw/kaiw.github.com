<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Documentation | Ambivalent Certainty]]></title>
  <link href="http://kaiw.github.com/blog/categories/documentation/atom.xml" rel="self"/>
  <link href="http://kaiw.github.com/"/>
  <updated>2012-06-13T21:40:20+10:00</updated>
  <id>http://kaiw.github.com/</id>
  <author>
    <name><![CDATA[Kai Willadsen]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Plucking a Mallard]]></title>
    <link href="http://kaiw.github.com/blog/2012/06/12/plucking-a-mallard/"/>
    <updated>2012-06-12T19:08:00+10:00</updated>
    <id>http://kaiw.github.com/blog/2012/06/12/plucking-a-mallard</id>
    <content type="html"><![CDATA[<p>Meld is in the process of getting nice new shiny
<a href="http://projectmallard.org/">Mallard</a>-based documentation. There are several
things standing in the way of getting our new help actually distributed with
Meld --- not least of which being that I haven't yet pushed it to Git --- but
there's nothing much stopping me from making it available on the
<a href="http://meldmerge.org/">Meld website</a>.</p>

<p>Putting the Mallard docs online involved:</p>

<ul>
<li>Formatting the docs as HTML</li>
<li>Pulling the necessary content out of the formatted docs</li>
<li>Fixing the Mallard-generated CSS to only apply to the embedded content</li>
</ul>


<h2>Mallard to HTML</h2>

<p>While it's sadly not obvious that you can do this, you can use
<code>gnome-doc-utils</code> to
<a href="http://projectmallard.org/pipermail/mallard-list_projectmallard.org/2010-November/000037.html">generate fairly straightforward HTML and accompanying CSS</a>
from Mallard documentation.</p>

<pre><code>gnome-doc-tool css
gnome-doc-tool html -c index.css --copy-graphics *.page
</code></pre>

<p>You'll get an HTML page for each Mallard page, and it'll all link to the
external CSS. No drama here.</p>

<h2>Stripping the HTML</h2>

<p>The HTML generated is designed to be stand-alone. However, we want to be able
to embed it in an existing webpage. Doing the simplest and hackiest thing
available, I used BeautifulSoup to just pull out the contents of the body, add
a header for Jekyll (Meld's site is hosted on GitHub) and rewrite the new
'HTML'.</p>

<p>I added a new Jekyll layout to be used for the help pages, and wrapped the
whole help content block in a <code>#help-content</code> <code>div</code>.</p>

<h2>Massaging the CSS</h2>

<p>The generated CSS is all top-level rules and whatnot. Worse yet, it uses
<em>sensible</em> class names like "title", so you're bound to have conflicting
classes in an existing site. Again doing the stupidest thing that would work,
I wrapped the whole CSS file in:</p>

<pre><code>#help-content {
    ...
}
</code></pre>

<p>and passed it through <a href="http://sass-lang.com/">Sass</a> as SCSS. This stopped the
help CSS messing with the main site, but the help pages themselves were all
wrong due to some messy interaction with the existing CSS reset, etc. A few
additional (evil) styling overrides:</p>

<pre><code>#help-content {
  background-color: #ffffff;
}

#help-content div.body {
  border: none !important;
}

#help-content div.headbar {
  margin: 10px !important;
}

#help-content div.footbar {
  margin: 10px !important;
}

#help-content .title {
  line-height: 1em;
}

#help-content h1 {
  font-family: sans-serif;
  font-weight: bold;
  color: black;
}

#help-content h2 {
  font-family: sans-serif;
  color: black;
}
</code></pre>

<p>and it looks pretty much like a sensibly-embedded Mallard page.</p>

<p>It's a pile of dirty hacks, but now at least Windows users can read our
documentation. <a href="http://meldmerge.org/help/">Check it out.</a></p>
]]></content>
  </entry>
  
</feed>
