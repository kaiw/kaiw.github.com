<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Meld | Ambivalent Certainty]]></title>
  <link href="http://kaiw.github.com/blog/categories/meld/atom.xml" rel="self"/>
  <link href="http://kaiw.github.com/"/>
  <updated>2013-09-15T09:06:42+10:00</updated>
  <id>http://kaiw.github.com/</id>
  <author>
    <name><![CDATA[Kai Willadsen]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[What's new in Meld 1.8?]]></title>
    <link href="http://kaiw.github.com/blog/2013/09/15/meld-18/"/>
    <updated>2013-09-15T08:59:00+10:00</updated>
    <id>http://kaiw.github.com/blog/2013/09/15/meld-18</id>
    <content type="html"><![CDATA[<p>Quite a bit!</p>

<p><strong>File comparisons</strong> are faster and interactivity is better while recomputing
changes, and initial support was added for comparing files using
synchronisation points.</p>

<p><img class="right" src="/images/blog/FolderColumns.png" title="Extra columns in folder comparisons" ></p>

<p><strong>Folder comparisons</strong> now have extra columns so you can see more file information
when doing your comparison. There is also a new shallow comparison option,
speeding things up nicely for people dealing with folders full of huge files.</p>

<p><strong>Version control view</strong> has had some significant compatibility updates,
culminating in the death of the dreaded 'patch failed' dialog, as Meld now
uses more reliable ways of interacting with version control systems. Some big
updates went in to support more commands, give better feedback, and do a
better job of launching conflict comparisons.</p>

<p><img class="left" src="/images/blog/DarkTheme.png" title="Support for custom themes" ></p>

<p><strong>Meld</strong> also received lots of little improvements here and there. We now have
better themeability (a big deal for dark theme fans), support for relaunching
recent comparisons, and a new UI for starting comparisons. Last but not least,
Meld's Windows support has improved, and bundled installers are becoming
available for Windows users (thanks to Keegan Witt).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The tale of the unwatched list]]></title>
    <link href="http://kaiw.github.com/blog/2013/01/12/mailing-list/"/>
    <updated>2013-01-12T07:39:00+10:00</updated>
    <id>http://kaiw.github.com/blog/2013/01/12/mailing-list</id>
    <content type="html"><![CDATA[<p>When I started maintaining Meld, a surprising number of accounts for new
<strike>chores</strike> services entered my life. Inevitably, a few
responsibilities were missed.</p>

<p>For example, until very recently, I didn't have admin access for the
<a href="https://mail.gnome.org/mailman/listinfo/meld-list">Meld mailing list</a>.
Since all posts to the list by non-members are held for moderation, I'm pretty
sure that this means that all non-member list traffic over the last few years
has been dropped on the floor.</p>

<p>Whoops.</p>

<p>What's worse is that since I've started doing the moderation, there's been
a consistent trickle of messages needing approval. Meld's list doesn't exactly
have a lot of traffic, so an extra message every couple of days is a
significant boost.</p>

<p>...all of which makes me wonder just how many people didn't become involved
in Meld due to an unwatched moderation queue.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Goings-on in Meld HEAD (and local branches)]]></title>
    <link href="http://kaiw.github.com/blog/2012/12/08/goings-on/"/>
    <updated>2012-12-08T06:03:00+10:00</updated>
    <id>http://kaiw.github.com/blog/2012/12/08/goings-on</id>
    <content type="html"><![CDATA[<p>Git HEAD can be an interesting place. It's actually not that scary right now,
but there have been a few interesting changes go in. There's also some cool
stuff in the pipeline. As usual, however, that will all take an indeterminate
period of time to arrive.</p>

<h2>Python 3-ish support (in HEAD)</h2>

<p>In a series of twenty-something commits, I've updated everything I could find
that might cause issues when running Meld on Python 3. This is a combination of
things found by <a href="https://github.com/mitsuhiko/python-modernize">Python modernize</a>,
<a href="http://docs.python.org/2/library/2to3.html">2to3</a>, and manual inspection. Due
to my lack of a Python 3 PyGObject install, none of this is actually <em>tested</em>
on Python 3, but it should all run on <code>-3</code> with no complaints.</p>

<h2>Better version control interactions (in HEAD)</h2>

<p>For ages, Meld has relied on a surprisingly-reliable-but-also-horrible way to
get the repository version of a file that looks something like:</p>

<ul>
<li>Get the current version of the file</li>
<li>Ask the VC for the diff between that file and the repository version</li>
<li>Reverse apply that patch to the current version</li>
<li>Hope...</li>
</ul>


<p>The last two steps failed on a fairly regular basis, particularly with
Subversion, which <a href="https://bugzilla.gnome.org/show_bug.cgi?id=557615">loves</a>
to <a href="https://bugzilla.gnome.org/show_bug.cgi?id=613685">lie</a> to us about what
the actual differences are between your file and the repository. The method in
current HEAD is somewhat more straightforward:</p>

<ul>
<li>Get the current version of the file</li>
<li>Ask the VC for the previous version of the file</li>
<li>Profit!</li>
</ul>


<p>While the second step has VC-specific wrinkles, it does get rid of a major pain
point. The third step is as-yet untested. Currently only Git and Subversion use
this method, but since almost all of Meld's 'couldn't reverse-apply this patch'
bugs are from Subversion, that's probably fine.</p>

<h2>Recent comparisons (coming soon)</h2>

<p>Over the years, people have requested file histories, bookmarks, reopening old
comparisons... all sorts of different ways to deal with common comparisons.
Usually, people have a set of two or three repositories that they view on a
daily basis, or a couple of directory pairs that they need to sync regularly.
Our previous solution was to store history, but this just makes it easier to
find what you want to compare; re-opening is no faster, and the UI was not
great anyway.</p>

<p>Landing soon is a change that provides a very hacky integration with the
standard recent files mechanism. This includes opening recent comparisons from
the <code>File</code> menu, and command-line support for opening files in our own very
special 'this is a comparison' format.</p>

<p>It's likely that this change will also spell the end for our clone of
<a href="http://developer.gnome.org/libgnomeui/stable/GnomeFileEntry.html">GnomeFileEntry</a>;
history support was the last thing keeping it alive. I'm sure not everyone will
be happy with moving to <code>GtkFileChooserButton</code>s, but the writing has been on
the wall for several years now, and it's well past time to make the switch.</p>

<h2>New comparison opening (coming soon-ish)</h2>

<p>Meld has a long-standing problem with its 'New' dialog. It doesn't make a whole
lot of sense, the workflow to actually create a new comparison for it is slow,
and it's not sufficiently obvious how you're supposed to use it. For example,
it's not unusual to navigate to the folders you want to compare, only to
realise that you can't actually select the folders because you've tried to
start a file comparison.</p>

<p>Once the recent comparison feature has landed, the history-access aspect of the
'New comparison' dialog can go away, which makes a new UI much easier and more
useful. I've also chosen to do away with the dialog entirely, in favour of
sticking the UI in a new top-level tab.</p>

<p><img class="center" src="/images/blog/NewComparisonTab.png" title="New comparison tab" ></p>

<p>Another nicety here is that we now actually support opening blank comparisons!
You could always do this, but it wasn't obvious to many people. One major use
case here is pasting in clipboard fragments to be compared.</p>

<p>While there are still some rough edges to be ironed out, I hope to land this
sooner rather than later.</p>

<h2>VC history comparisons (coming... sometime)</h2>

<p>An offshoot of better VC integration is the ability to grab repository files
from arbitrary revisions. Actually handling this sensibly is difficult however.
We <em>could</em> just dump revisions to file and pass off file paths in <code>/tmp</code> as
we currently do, but this really limits what we can do UI-wise. As such, I'm
working on a revamped file comparison view that will handle browsing of
previous revisions of VC-controlled files.</p>

<p><img class="center" src="/images/blog/VCHistory.png" title="Version control history example" ></p>

<p>Yes, changing the combo box works. No, the SHA won't be the only indicator in
the final UI. No, there's no Subversion support; only Git and Mercurial so far.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Meld fixes I'll never get around to, August 2012 edition]]></title>
    <link href="http://kaiw.github.com/blog/2012/08/31/meld-fixes-one-day-part-one/"/>
    <updated>2012-08-31T00:00:00+10:00</updated>
    <id>http://kaiw.github.com/blog/2012/08/31/meld-fixes-one-day-part-one</id>
    <content type="html"><![CDATA[<p>Our automatic merging commands 'Merge from left', 'Merge from right' and
'Merge all' depend on the focussed pane. There are two problems with this.</p>

<p>Firstly, for most people, merging goes from the outsides to the middle, and
never in reverse. The reason is that this is how it works for version control;
merging in VC always (not actually, but close enough) involves making changes
to <em>one</em> file with reference to the other two. As such, it would be reasonable
to expect that 'Merge from left' actually merged all of the left pane changes
into the middle pane, regardless of where the cursor was.</p>

<p>The second problem is that 'Merge all' makes <em>absolutely no sense</em> in any pane
other than the middle; it's identical to 'Merge from right' in the left pane,
or 'Merge from left' in the right pane, but more confusing.</p>

<p>One option would be to rework these commands so that they only ever operated
on the middle pane. Another option would be to add some dynamic labelling so
that it was clear what the menu item did before you clicked it. Without
knowing how widely used these actions are, and what people use them for, it's
hard to know what the best option is.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tell me what you can't do]]></title>
    <link href="http://kaiw.github.com/blog/2012/07/09/tell-me-what-you-can%27t-do/"/>
    <updated>2012-07-09T17:45:00+10:00</updated>
    <id>http://kaiw.github.com/blog/2012/07/09/tell-me-what-you-can't-do</id>
    <content type="html"><![CDATA[<p>When writing Meld's <a href="http://meldmerge.org/help/">new documentation</a>, I added
a section that I wish every software project had:
<a href="http://meldmerge.org/help/missing-functionality.html">"Things that Meld doesn't do"</a>.</p>

<p>Everyone's had the experience of spending hours trying to figure out how to
do &lt;insert task here&gt; with &lt;tool of choice&gt;, because <em>obviously</em>
&lt;tool of choice&gt; <em>must</em> be able to do &lt;insert task here&gt;. Many
years ago I remember trying to figure out how to create a histogram with
Excel---ludicrously obvious functionality for a spreadsheet---but at the time
it was all-but-impossible without a third-party commercial add-on.</p>

<p>If 'stuff we don't do' is documented at all, it's often relegated to a point in
the FAQ (e.g.,
<a href="http://projects.gnome.org/gnumeric/faq.shtml#6">Gnumeric and pivot tables</a>),
which is okay as long as it shows up in a simple search. Ideally though, I feel
like software should do a better job of telling you both what it can do, and
what it can't.</p>

<p>Spending time only to find out that a tool can't solve your problem is an
incredibly frustrating experience.</p>

<p>Exposing your limitations might feel like bad marketing, but ultimately you'll
end up with fewer unhappy users.</p>
]]></content>
  </entry>
  
</feed>
