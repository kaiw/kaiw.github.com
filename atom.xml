<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Ambivalent Certainty]]></title>
  <link href="http://kaiw.github.com/atom.xml" rel="self"/>
  <link href="http://kaiw.github.com/"/>
  <updated>2012-09-22T15:28:26+10:00</updated>
  <id>http://kaiw.github.com/</id>
  <author>
    <name><![CDATA[Kai Willadsen]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Meld fixes I'll never get around to, August 2012 edition]]></title>
    <link href="http://kaiw.github.com/blog/2012/08/31/meld-fixes-one-day-part-one/"/>
    <updated>2012-08-31T00:00:00+10:00</updated>
    <id>http://kaiw.github.com/blog/2012/08/31/meld-fixes-one-day-part-one</id>
    <content type="html"><![CDATA[<p>Our automatic merging commands &#8216;Merge from left&#8217;, &#8216;Merge from right&#8217; and
&#8216;Merge all&#8217; depend on the focussed pane. There are two problems with this.</p>

<p>Firstly, for most people, merging goes from the outsides to the middle, and
never in reverse. The reason is that this is how it works for version control;
merging in VC always (not actually, but close enough) involves making changes
to <em>one</em> file with reference to the other two. As such, it would be reasonable
to expect that &#8216;Merge from left&#8217; actually merged all of the left pane changes
into the middle pane, regardless of where the cursor was.</p>

<p>The second problem is that &#8216;Merge all&#8217; makes <em>absolutely no sense</em> in any pane
other than the middle; it&#8217;s identical to &#8216;Merge from right&#8217; in the left pane,
or &#8216;Merge from left&#8217; in the right pane, but more confusing.</p>

<p>One option would be to rework these commands so that they only ever operated
on the middle pane. Another option would be to add some dynamic labelling so
that it was clear what the menu item did before you clicked it. Without
knowing how widely used these actions are, and what people use them for, it&#8217;s
hard to know what the best option is.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tell me what you can't do]]></title>
    <link href="http://kaiw.github.com/blog/2012/07/09/tell-me-what-you-can%27t-do/"/>
    <updated>2012-07-09T17:45:00+10:00</updated>
    <id>http://kaiw.github.com/blog/2012/07/09/tell-me-what-you-can&#8217;t-do</id>
    <content type="html"><![CDATA[<p>When writing Meld&#8217;s <a href="http://meldmerge.org/help/">new documentation</a>, I added
a section that I wish every software project had:
<a href="http://meldmerge.org/help/missing-functionality.html">&#8220;Things that Meld doesn&#8217;t do&#8221;</a>.</p>

<p>Everyone&#8217;s had the experience of spending hours trying to figure out how to
do &lt;insert task here&gt; with &lt;tool of choice&gt;, because <em>obviously</em>
&lt;tool of choice&gt; <em>must</em> be able to do &lt;insert task here&gt;. Many
years ago I remember trying to figure out how to create a histogram with
Excel&#8212;ludicrously obvious functionality for a spreadsheet&#8212;but at the time
it was all-but-impossible without a third-party commercial add-on.</p>

<p>If &#8216;stuff we don&#8217;t do&#8217; is documented at all, it&#8217;s often relegated to a point in
the FAQ (e.g.,
<a href="http://projects.gnome.org/gnumeric/faq.shtml#6">Gnumeric and pivot tables</a>),
which is okay as long as it shows up in a simple search. Ideally though, I feel
like software should do a better job of telling you both what it can do, and
what it can&#8217;t.</p>

<p>Spending time only to find out that a tool can&#8217;t solve your problem is an
incredibly frustrating experience.</p>

<p>Exposing your limitations might feel like bad marketing, but ultimately you&#8217;ll
end up with fewer unhappy users.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Things that suck about Meld that I learned about by writing user help]]></title>
    <link href="http://kaiw.github.com/blog/2012/06/28/things-I-learned-while-writing-help/"/>
    <updated>2012-06-28T06:52:00+10:00</updated>
    <id>http://kaiw.github.com/blog/2012/06/28/things-I-learned-while-writing-help</id>
    <content type="html"><![CDATA[<p>In any software that you work on, there are always pain points; there are
things that you <em>know</em> aren&#8217;t great, but are low priority or hard to fix or
would mean changing established behaviours. It&#8217;s when you sit down to document
how these things work that you realise <em>just how much these things suck</em>.</p>

<p>If developers had to document the bizarre corners of their UI, I&#8217;m sure we&#8217;d
have far fewer bizarre corners. By way of example, while writing
<a href="http://meldmerge.org">Meld&#8217;s</a> new help docs, I simply couldn&#8217;t
bring myself to write the sentence &#8220;Toggle a case insensitive comparison by
clicking &#8216;Case&#8217; on the toolbar&#8221;, so ended up rearranging the toolbar and fixing
some labels. The world is better for it.</p>

<p>The following is a very incomplete list of the things that made me feel ashamed
when documentating them.</p>

<h2>Which file gets saved?</h2>

<p>When you &#8220;Save&#8221;, Meld only saves the currently focussed file. This is mostly
sensible; the other option would be to save all files in the current
comparison, which is often <em>not</em> what you want.</p>

<p>However, this means explaining that we only save one file, and that&#8217;s the
&#8216;focussed&#8217; file. What&#8217;s a focussed file? Oh, that&#8217;s the one that your cursor is
currently in. What do you mean you can&#8217;t see the cursor? It&#8217;s that tiny
one-pixel wide vertical bar in the&#8230; oh, right. Look, the focussed file is
the last one you were editing&#8230; probably.</p>

<p>Actually, you know what? Forget it.</p>

<p>I&#8217;m sorry.</p>

<h2>Why are your shortcuts all different?</h2>

<p>A while ago I fixed a long-standing request to be able to switch panes in
file comparisons using the keyboard. Turns out I didn&#8217;t bother to apply the
same method to folder comparisons, even though it&#8217;s <em>much</em> easier to do.
Admittedly, adding this would mean that there were two ways of switching
panes in directory comparisons, but at least one of those ways would be
consistent across different comparison types.</p>

<p>I&#8217;ll <a href="https://bugzilla.gnome.org/show_bug.cgi?id=679007">fix this</a> eventually.</p>

<h2>View Â» Hide? Case? What?</h2>

<p>The menu item to toggle case-insensitive comparison was labelled &#8220;Case&#8221;,
probably so that it would fit on the toolbar&#8230; but it&#8217;s not important enough
to warrant being on the toolbar anyway.
<a href="http://git.gnome.org/browse/meld/commit/?id=3b24e07f65e8d5bd561c4925a487e15a64ce941a">Fixed</a>
and <a href="http://git.gnome.org/browse/meld/commit/?id=6709339af6478e3576f3a76e35f30e4ca5d046ca">fixed</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Plucking a Mallard]]></title>
    <link href="http://kaiw.github.com/blog/2012/06/12/plucking-a-mallard/"/>
    <updated>2012-06-12T19:08:00+10:00</updated>
    <id>http://kaiw.github.com/blog/2012/06/12/plucking-a-mallard</id>
    <content type="html"><![CDATA[<p>Meld is in the process of getting nice new shiny
<a href="http://projectmallard.org/">Mallard</a>-based documentation. There are several
things standing in the way of getting our new help actually distributed with
Meld &#8212; not least of which being that I haven&#8217;t yet pushed it to Git &#8212; but
there&#8217;s nothing much stopping me from making it available on the
<a href="http://meldmerge.org/">Meld website</a>.</p>

<p>Putting the Mallard docs online involved:</p>

<ul>
<li>Formatting the docs as HTML</li>
<li>Pulling the necessary content out of the formatted docs</li>
<li>Fixing the Mallard-generated CSS to only apply to the embedded content</li>
</ul>


<h2>Mallard to HTML</h2>

<p>While it&#8217;s sadly not obvious that you can do this, you can use
<code>gnome-doc-utils</code> to
<a href="http://projectmallard.org/pipermail/mallard-list_projectmallard.org/2010-November/000037.html">generate fairly straightforward HTML and accompanying CSS</a>
from Mallard documentation.</p>

<pre><code>gnome-doc-tool css
gnome-doc-tool html -c index.css --copy-graphics *.page
</code></pre>

<p>You&#8217;ll get an HTML page for each Mallard page, and it&#8217;ll all link to the
external CSS. No drama here.</p>

<h2>Stripping the HTML</h2>

<p>The HTML generated is designed to be stand-alone. However, we want to be able
to embed it in an existing webpage. Doing the simplest and hackiest thing
available, I used BeautifulSoup to just pull out the contents of the body, add
a header for Jekyll (Meld&#8217;s site is hosted on GitHub) and rewrite the new
&#8216;HTML&#8217;.</p>

<p>I added a new Jekyll layout to be used for the help pages, and wrapped the
whole help content block in a <code>#help-content</code> <code>div</code>.</p>

<h2>Massaging the CSS</h2>

<p>The generated CSS is all top-level rules and whatnot. Worse yet, it uses
<em>sensible</em> class names like &#8220;title&#8221;, so you&#8217;re bound to have conflicting
classes in an existing site. Again doing the stupidest thing that would work,
I wrapped the whole CSS file in:</p>

<pre><code>#help-content {
    ...
}
</code></pre>

<p>and passed it through <a href="http://sass-lang.com/">Sass</a> as SCSS. This stopped the
help CSS messing with the main site, but the help pages themselves were all
wrong due to some messy interaction with the existing CSS reset, etc. A few
additional (evil) styling overrides:</p>

<pre><code>#help-content {
  background-color: #ffffff;
}

#help-content div.body {
  border: none !important;
}

#help-content div.headbar {
  margin: 10px !important;
}

#help-content div.footbar {
  margin: 10px !important;
}

#help-content .title {
  line-height: 1em;
}

#help-content h1 {
  font-family: sans-serif;
  font-weight: bold;
  color: black;
}

#help-content h2 {
  font-family: sans-serif;
  color: black;
}
</code></pre>

<p>and it looks pretty much like a sensibly-embedded Mallard page.</p>

<p>It&#8217;s a pile of dirty hacks, but now at least Windows users can read our
documentation. <a href="http://meldmerge.org/help/">Check it out.</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Obligatory first post]]></title>
    <link href="http://kaiw.github.com/blog/2012/06/06/obligatory-first-post/"/>
    <updated>2012-06-06T07:54:00+10:00</updated>
    <id>http://kaiw.github.com/blog/2012/06/06/obligatory-first-post</id>
    <content type="html"><![CDATA[<p>This blog is an attempt to consolidate the limited writing that I do.
Statistics suggest that it will probably fail.</p>
]]></content>
  </entry>
  
</feed>
