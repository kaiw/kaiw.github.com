<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Ambivalent Certainty]]></title>
  <link href="http://kaiw.github.com/atom.xml" rel="self"/>
  <link href="http://kaiw.github.com/"/>
  <updated>2014-09-27T08:15:03+10:00</updated>
  <id>http://kaiw.github.com/</id>
  <author>
    <name><![CDATA[Kai Willadsen]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[What's New in Meld 3.12]]></title>
    <link href="http://kaiw.github.com/blog/2014/09/24/meld-3-12/"/>
    <updated>2014-09-24T07:40:00+10:00</updated>
    <id>http://kaiw.github.com/blog/2014/09/24/meld-3-12</id>
    <content type="html"><![CDATA[<p>After an unexpectedly long transition, Meld 3.12 is the first stable release
of Meld based on GTK+ 3. As usual, plenty has changed. While a lot of work
this time around was behind the scenes, some of that work has enabled cool new
features as well.</p>

<h2>Appearance</h2>

<p>Everything looks&hellip; newer. With the update to GTK+ 3, we&rsquo;ve removed the use of
some older widgets&mdash;most notably the old-style file selectors&mdash;and
somewhat modernised the layout and overall visual appearance. We&rsquo;ve also
cleaned up some icons to be a little more balanced, and updated the overall
colour scheme. While not ready yet, the next release cycle will also see
support for global dark theme settings.</p>

<p><img class="left" src="http://kaiw.github.com/images/blog/3-12-theme.png" title="Theme improvements for 3.12" >
<img class="right" src="http://kaiw.github.com/images/blog/3-13-theme-dark.png" title="Upcoming dark theme support" ></p>

<div style="clear: both;"></div>


<p>Under GNOME Shell, Meld will integrate into the GNOME 3 style application
menu, and we&rsquo;ll fall back to adding a new &ldquo;Meld&rdquo; menu for other platforms.</p>

<h2>Comparisons</h2>

<p>Pane resizing&mdash;a long-standing feature request, finally picked up by
Marco Brito&mdash;has been merged. Hopefully this will make comparisons easier
for those of you who stuck trying to do a three-way merge on a 13&#8221; screen.</p>

<p>File comparisons now show a notification if a file is modified outside of
Meld, and prompt to reload. We also display better labels for file comparisons
launched from version control, so you should no longer see useless temporary
file names here.</p>

<p>In folder comparisons, if you have a folder that&rsquo;s empty after filtering has
been applied, that folder will (finally) be correctly trimmed from the tree.
We also now use normal desktop trash handling for file operations, instead of
just deleting things forever without warning&hellip;</p>

<p><img class="right" src="http://kaiw.github.com/images/blog/conflict-dialog.png" title="Marking conflicts resolved" ></p>

<p>On the version control side of things, we have some support for showing file
metadata, including renames thanks to Louis des Landes. Currently this is only
used by Bazaar, but we&rsquo;ll hopefully extend this support to Git and Mercurial
soon. Finally, as a handy touch, for conflict resolutions that you start from
a Meld version control tab, we now prompt to mark a conflict as resolved when
you close the file comparison.</p>

<div style="clear: both;"></div>


<h2>Help and translation</h2>

<p><img class="right" src="http://kaiw.github.com/images/blog/yelp-help.png" title="Yelp browsing new Meld help" ></p>

<p>Meld now uses Mallard for documentation, and there&rsquo;s a <strike>hack</strike>
script that we use to provide <a href="http://meldmerge.org/help/">online help</a> for
non-GNOME platforms.</p>

<p>Thanks to the thoroughly awesome GNOME Translation Teams, Meld&rsquo;s translations
are <a href="https://l10n.gnome.org/module/meld/">looking good</a>, with several full
translations for the new manual as well! Of course, our translation coverage
could always be better, so if you notice gaps in your native language support,
please consider <a href="https://l10n.gnome.org/teams/">joining a team</a> to help out.</p>

<div style="clear: both;"></div>


<h2>Windows support</h2>

<p>While Meld has worked on Windows for some time, we are now building and
distributing stand-alone Windows installers for Meld. Some of our Windows
support is still a little rough around the edges, but with more users and a
better distribution story, you can expect to see this situation continue to
improve in the coming release cycles. Thanks go to Keegan Witt for maintaining
the unofficial binary distribution, and for helping out with the transition.</p>

<h2>Behind the scenes</h2>

<p>Meld is now a single-instance application, using the GtkApplication model. By
default Meld will still use multiple windows, and each command-line process
will wait until its window has closed, so from a user point of view, very
little should change.</p>

<p>With the transition to the newer GTK+ 3 platform and related tools, we&rsquo;ve also
cleaned up tonnes of unpleasant code. Preferences handling has been rewritten,
our custom colours are CSS-themed and we&rsquo;ve moved to making heavier use of the
excellent GtkSourceView library.</p>

<h2>Future plans</h2>

<p>By the time you read this, 3.12 will probably have already branched, and some
pending stuff for 3.13 will be going in. My list of things-to-merge already
includes incremental find for file comparisons, better dark theme support, and
a rework of conflict resolution mode to show a combination of the pre-merged
file with ancestor information for conflicting sections.</p>

<p>If you&rsquo;d like to get involved with Meld development then please get in
touch on the mailing list: <a href="mailto:meld-list@gnome.org">meld-list@gnome.org</a>.</p>

<h2>Thanks</h2>

<p>Thanks to everyone who contributed to the release, whether through features,
translations or bugfixes:
Andika Triwidada, Bartosz Dziewoński, Ben Ross,
Benjamin Steinwender, Casey, Christoph Brill, Daniel Mustieles, Daniel Pantea,
Dimitris Spingos, Dominique Leuenberger, Enrico Nicoletto, Facundo Dario
Illanes, fr33domlover, Fran Diéguez, Gabor Kelemen, Gianni Trovisi, Inaki
Larranaga Murgoitio, Jiri Grönroos, Josef Andersson, Kai Willadsen, Lars
Wendler, Lasse Liehu, Louis des Landes, Marco Brito, Marek Černocký, Matej
Urbančič, Milo Casagrande, Peter Tyser, Piotr Drąg, Rafael Ferreira, Thomas
Klausner, Tom Scytale, Tom Tryfonidis, Ville-Pekka Vainio, Yuri Myasoedov,
zodiac111, Özgür Sarıer, Мирослав Николић</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Meld Features That People Have Never Asked For]]></title>
    <link href="http://kaiw.github.com/blog/2014/03/29/features-people-have-never-asked-for/"/>
    <updated>2014-03-29T09:45:00+10:00</updated>
    <id>http://kaiw.github.com/blog/2014/03/29/features-people-have-never-asked-for</id>
    <content type="html"><![CDATA[<p>People ask for new features all the time. Sometimes they&rsquo;re good ideas, sometimes&hellip; they&rsquo;re not. Sometimes there&rsquo;s a better way to address the requested feature. However, to me it&rsquo;s interesting to contemplate the things that people <em>don&rsquo;t</em> ask for.</p>

<h2>New Window</h2>

<p>Meld is a single window app. It isn&rsquo;t designed that way&hellip; it&rsquo;s just that it&rsquo;s never supported anything else. No one has <em>ever</em> asked to be able to open a second window.</p>

<p>In Meld 3.11.0, we now at least have the notion of windows, though we still don&rsquo;t actually have a &lsquo;New Window&rsquo; menu item. Maybe one day&hellip;</p>

<h2>D-Bus API</h2>

<p>Meld uses D-Bus to support some very limited single-instance features; specifically, you can open a comparison in a new tab. However, no one has ever expressed any interest in having an actual D-Bus API for Meld.</p>

<h2>Move to Trash</h2>

<p>We do some really terrifying things when handling folders and directories, the most obvious being that you can recursively and permanently delete folders from within a folder comparison. Permanently deleting files doesn&rsquo;t even prompt! Despite this being a pretty nasty example of not handling user error, no one has ever suggested that maybe we should be less insane.</p>

<p>In Meld 3.11.0, we use GIO to &lsquo;trash&rsquo; things for us, which should do-the-right-thing on different platforms.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What's New in Meld 1.8?]]></title>
    <link href="http://kaiw.github.com/blog/2013/09/15/meld-18/"/>
    <updated>2013-09-15T08:59:00+10:00</updated>
    <id>http://kaiw.github.com/blog/2013/09/15/meld-18</id>
    <content type="html"><![CDATA[<p>Quite a bit!</p>

<p><strong>File comparisons</strong> are faster and interactivity is better while recomputing
changes, and initial support was added for comparing files using
synchronisation points.</p>

<p><img class="right" src="http://kaiw.github.com/images/blog/FolderColumns.png" title="Extra columns in folder comparisons" ></p>

<p><strong>Folder comparisons</strong> now have extra columns so you can see more file information
when doing your comparison. There is also a new shallow comparison option,
speeding things up nicely for people dealing with folders full of huge files.</p>

<p><strong>Version control view</strong> has had some significant compatibility updates,
culminating in the death of the dreaded &lsquo;patch failed&rsquo; dialog, as Meld now
uses more reliable ways of interacting with version control systems. Some big
updates went in to support more commands, give better feedback, and do a
better job of launching conflict comparisons.</p>

<p><img class="left" src="http://kaiw.github.com/images/blog/DarkTheme.png" title="Support for custom themes" ></p>

<p><strong>Meld</strong> also received lots of little improvements here and there. We now have
better themeability (a big deal for dark theme fans), support for relaunching
recent comparisons, and a new UI for starting comparisons. Last but not least,
Meld&rsquo;s Windows support has improved, and bundled installers are becoming
available for Windows users (thanks to Keegan Witt).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Tale of the Unwatched List]]></title>
    <link href="http://kaiw.github.com/blog/2013/01/12/mailing-list/"/>
    <updated>2013-01-12T07:39:00+10:00</updated>
    <id>http://kaiw.github.com/blog/2013/01/12/mailing-list</id>
    <content type="html"><![CDATA[<p>When I started maintaining Meld, a surprising number of accounts for new
<strike>chores</strike> services entered my life. Inevitably, a few
responsibilities were missed.</p>

<p>For example, until very recently, I didn&rsquo;t have admin access for the
<a href="https://mail.gnome.org/mailman/listinfo/meld-list">Meld mailing list</a>.
Since all posts to the list by non-members are held for moderation, I&rsquo;m pretty
sure that this means that all non-member list traffic over the last few years
has been dropped on the floor.</p>

<p>Whoops.</p>

<p>What&rsquo;s worse is that since I&rsquo;ve started doing the moderation, there&rsquo;s been
a consistent trickle of messages needing approval. Meld&rsquo;s list doesn&rsquo;t exactly
have a lot of traffic, so an extra message every couple of days is a
significant boost.</p>

<p>&hellip;all of which makes me wonder just how many people didn&rsquo;t become involved
in Meld due to an unwatched moderation queue.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Goings-on in Meld HEAD (and Local Branches)]]></title>
    <link href="http://kaiw.github.com/blog/2012/12/08/goings-on/"/>
    <updated>2012-12-08T06:03:00+10:00</updated>
    <id>http://kaiw.github.com/blog/2012/12/08/goings-on</id>
    <content type="html"><![CDATA[<p>Git HEAD can be an interesting place. It&rsquo;s actually not that scary right now,
but there have been a few interesting changes go in. There&rsquo;s also some cool
stuff in the pipeline. As usual, however, that will all take an indeterminate
period of time to arrive.</p>

<h2>Python 3-ish support (in HEAD)</h2>

<p>In a series of twenty-something commits, I&rsquo;ve updated everything I could find
that might cause issues when running Meld on Python 3. This is a combination of
things found by <a href="https://github.com/mitsuhiko/python-modernize">Python modernize</a>,
<a href="http://docs.python.org/2/library/2to3.html">2to3</a>, and manual inspection. Due
to my lack of a Python 3 PyGObject install, none of this is actually <em>tested</em>
on Python 3, but it should all run on <code>-3</code> with no complaints.</p>

<h2>Better version control interactions (in HEAD)</h2>

<p>For ages, Meld has relied on a surprisingly-reliable-but-also-horrible way to
get the repository version of a file that looks something like:</p>

<ul>
<li>Get the current version of the file</li>
<li>Ask the VC for the diff between that file and the repository version</li>
<li>Reverse apply that patch to the current version</li>
<li>Hope&hellip;</li>
</ul>


<p>The last two steps failed on a fairly regular basis, particularly with
Subversion, which <a href="https://bugzilla.gnome.org/show_bug.cgi?id=557615">loves</a>
to <a href="https://bugzilla.gnome.org/show_bug.cgi?id=613685">lie</a> to us about what
the actual differences are between your file and the repository. The method in
current HEAD is somewhat more straightforward:</p>

<ul>
<li>Get the current version of the file</li>
<li>Ask the VC for the previous version of the file</li>
<li>Profit!</li>
</ul>


<p>While the second step has VC-specific wrinkles, it does get rid of a major pain
point. The third step is as-yet untested. Currently only Git and Subversion use
this method, but since almost all of Meld&rsquo;s &lsquo;couldn&rsquo;t reverse-apply this patch&rsquo;
bugs are from Subversion, that&rsquo;s probably fine.</p>

<h2>Recent comparisons (coming soon)</h2>

<p>Over the years, people have requested file histories, bookmarks, reopening old
comparisons&hellip; all sorts of different ways to deal with common comparisons.
Usually, people have a set of two or three repositories that they view on a
daily basis, or a couple of directory pairs that they need to sync regularly.
Our previous solution was to store history, but this just makes it easier to
find what you want to compare; re-opening is no faster, and the UI was not
great anyway.</p>

<p>Landing soon is a change that provides a very hacky integration with the
standard recent files mechanism. This includes opening recent comparisons from
the <code>File</code> menu, and command-line support for opening files in our own very
special &lsquo;this is a comparison&rsquo; format.</p>

<p>It&rsquo;s likely that this change will also spell the end for our clone of
<a href="http://developer.gnome.org/libgnomeui/stable/GnomeFileEntry.html">GnomeFileEntry</a>;
history support was the last thing keeping it alive. I&rsquo;m sure not everyone will
be happy with moving to <code>GtkFileChooserButton</code>s, but the writing has been on
the wall for several years now, and it&rsquo;s well past time to make the switch.</p>

<h2>New comparison opening (coming soon-ish)</h2>

<p>Meld has a long-standing problem with its &lsquo;New&rsquo; dialog. It doesn&rsquo;t make a whole
lot of sense, the workflow to actually create a new comparison for it is slow,
and it&rsquo;s not sufficiently obvious how you&rsquo;re supposed to use it. For example,
it&rsquo;s not unusual to navigate to the folders you want to compare, only to
realise that you can&rsquo;t actually select the folders because you&rsquo;ve tried to
start a file comparison.</p>

<p>Once the recent comparison feature has landed, the history-access aspect of the
&lsquo;New comparison&rsquo; dialog can go away, which makes a new UI much easier and more
useful. I&rsquo;ve also chosen to do away with the dialog entirely, in favour of
sticking the UI in a new top-level tab.</p>

<p><img class="center" src="http://kaiw.github.com/images/blog/NewComparisonTab.png" title="New comparison tab" ></p>

<p>Another nicety here is that we now actually support opening blank comparisons!
You could always do this, but it wasn&rsquo;t obvious to many people. One major use
case here is pasting in clipboard fragments to be compared.</p>

<p>While there are still some rough edges to be ironed out, I hope to land this
sooner rather than later.</p>

<h2>VC history comparisons (coming&hellip; sometime)</h2>

<p>An offshoot of better VC integration is the ability to grab repository files
from arbitrary revisions. Actually handling this sensibly is difficult however.
We <em>could</em> just dump revisions to file and pass off file paths in <code>/tmp</code> as
we currently do, but this really limits what we can do UI-wise. As such, I&rsquo;m
working on a revamped file comparison view that will handle browsing of
previous revisions of VC-controlled files.</p>

<p><img class="center" src="http://kaiw.github.com/images/blog/VCHistory.png" title="Version control history example" ></p>

<p>Yes, changing the combo box works. No, the SHA won&rsquo;t be the only indicator in
the final UI. No, there&rsquo;s no Subversion support; only Git and Mercurial so far.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Meld Fixes I'll Never Get Around to, August 2012 Edition]]></title>
    <link href="http://kaiw.github.com/blog/2012/08/31/meld-fixes-one-day-part-one/"/>
    <updated>2012-08-31T00:00:00+10:00</updated>
    <id>http://kaiw.github.com/blog/2012/08/31/meld-fixes-one-day-part-one</id>
    <content type="html"><![CDATA[<p>Our automatic merging commands &lsquo;Merge from left&rsquo;, &lsquo;Merge from right&rsquo; and
&lsquo;Merge all&rsquo; depend on the focussed pane. There are two problems with this.</p>

<p>Firstly, for most people, merging goes from the outsides to the middle, and
never in reverse. The reason is that this is how it works for version control;
merging in VC always (not actually, but close enough) involves making changes
to <em>one</em> file with reference to the other two. As such, it would be reasonable
to expect that &lsquo;Merge from left&rsquo; actually merged all of the left pane changes
into the middle pane, regardless of where the cursor was.</p>

<p>The second problem is that &lsquo;Merge all&rsquo; makes <em>absolutely no sense</em> in any pane
other than the middle; it&rsquo;s identical to &lsquo;Merge from right&rsquo; in the left pane,
or &lsquo;Merge from left&rsquo; in the right pane, but more confusing.</p>

<p>One option would be to rework these commands so that they only ever operated
on the middle pane. Another option would be to add some dynamic labelling so
that it was clear what the menu item did before you clicked it. Without
knowing how widely used these actions are, and what people use them for, it&rsquo;s
hard to know what the best option is.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tell Me What You Can't Do]]></title>
    <link href="http://kaiw.github.com/blog/2012/07/09/tell-me-what-you-can%27t-do/"/>
    <updated>2012-07-09T17:45:00+10:00</updated>
    <id>http://kaiw.github.com/blog/2012/07/09/tell-me-what-you-can&#8217;t-do</id>
    <content type="html"><![CDATA[<p>When writing Meld&rsquo;s <a href="http://meldmerge.org/help/">new documentation</a>, I added
a section that I wish every software project had:
<a href="http://meldmerge.org/help/missing-functionality.html">&ldquo;Things that Meld doesn&rsquo;t do&rdquo;</a>.</p>

<p>Everyone&rsquo;s had the experience of spending hours trying to figure out how to
do &lt;insert task here&gt; with &lt;tool of choice&gt;, because <em>obviously</em>
&lt;tool of choice&gt; <em>must</em> be able to do &lt;insert task here&gt;. Many
years ago I remember trying to figure out how to create a histogram with
Excel&mdash;-ludicrously obvious functionality for a spreadsheet&mdash;-but at the time
it was all-but-impossible without a third-party commercial add-on.</p>

<p>If &lsquo;stuff we don&rsquo;t do&rsquo; is documented at all, it&rsquo;s often relegated to a point in
the FAQ (e.g.,
<a href="http://projects.gnome.org/gnumeric/faq.shtml#6">Gnumeric and pivot tables</a>),
which is okay as long as it shows up in a simple search. Ideally though, I feel
like software should do a better job of telling you both what it can do, and
what it can&rsquo;t.</p>

<p>Spending time only to find out that a tool can&rsquo;t solve your problem is an
incredibly frustrating experience.</p>

<p>Exposing your limitations might feel like bad marketing, but ultimately you&rsquo;ll
end up with fewer unhappy users.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Things That Suck About Meld That I Learned About by Writing User Help]]></title>
    <link href="http://kaiw.github.com/blog/2012/06/28/things-I-learned-while-writing-help/"/>
    <updated>2012-06-28T06:52:00+10:00</updated>
    <id>http://kaiw.github.com/blog/2012/06/28/things-I-learned-while-writing-help</id>
    <content type="html"><![CDATA[<p>In any software that you work on, there are always pain points; there are
things that you <em>know</em> aren&rsquo;t great, but are low priority or hard to fix or
would mean changing established behaviours. It&rsquo;s when you sit down to document
how these things work that you realise <em>just how much these things suck</em>.</p>

<p>If developers had to document the bizarre corners of their UI, I&rsquo;m sure we&rsquo;d
have far fewer bizarre corners. By way of example, while writing
<a href="http://meldmerge.org">Meld&rsquo;s</a> new help docs, I simply couldn&rsquo;t
bring myself to write the sentence &ldquo;Toggle a case insensitive comparison by
clicking &lsquo;Case&rsquo; on the toolbar&rdquo;, so ended up rearranging the toolbar and fixing
some labels. The world is better for it.</p>

<p>The following is a very incomplete list of the things that made me feel ashamed
when documentating them.</p>

<h2>Which file gets saved?</h2>

<p>When you &ldquo;Save&rdquo;, Meld only saves the currently focussed file. This is mostly
sensible; the other option would be to save all files in the current
comparison, which is often <em>not</em> what you want.</p>

<p>However, this means explaining that we only save one file, and that&rsquo;s the
&lsquo;focussed&rsquo; file. What&rsquo;s a focussed file? Oh, that&rsquo;s the one that your cursor is
currently in. What do you mean you can&rsquo;t see the cursor? It&rsquo;s that tiny
one-pixel wide vertical bar in the&hellip; oh, right. Look, the focussed file is
the last one you were editing&hellip; probably.</p>

<p>Actually, you know what? Forget it.</p>

<p>I&rsquo;m sorry.</p>

<h2>Why are your shortcuts all different?</h2>

<p>A while ago I fixed a long-standing request to be able to switch panes in
file comparisons using the keyboard. Turns out I didn&rsquo;t bother to apply the
same method to folder comparisons, even though it&rsquo;s <em>much</em> easier to do.
Admittedly, adding this would mean that there were two ways of switching
panes in directory comparisons, but at least one of those ways would be
consistent across different comparison types.</p>

<p>I&rsquo;ll <a href="https://bugzilla.gnome.org/show_bug.cgi?id=679007">fix this</a> eventually.</p>

<h2>View » Hide? Case? What?</h2>

<p>The menu item to toggle case-insensitive comparison was labelled &ldquo;Case&rdquo;,
probably so that it would fit on the toolbar&hellip; but it&rsquo;s not important enough
to warrant being on the toolbar anyway.
<a href="http://git.gnome.org/browse/meld/commit/?id=3b24e07f65e8d5bd561c4925a487e15a64ce941a">Fixed</a>
and <a href="http://git.gnome.org/browse/meld/commit/?id=6709339af6478e3576f3a76e35f30e4ca5d046ca">fixed</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Plucking a Mallard]]></title>
    <link href="http://kaiw.github.com/blog/2012/06/12/plucking-a-mallard/"/>
    <updated>2012-06-12T19:08:00+10:00</updated>
    <id>http://kaiw.github.com/blog/2012/06/12/plucking-a-mallard</id>
    <content type="html"><![CDATA[<p>Meld is in the process of getting nice new shiny
<a href="http://projectmallard.org/">Mallard</a>-based documentation. There are several
things standing in the way of getting our new help actually distributed with
Meld &mdash;&ndash; not least of which being that I haven&rsquo;t yet pushed it to Git &mdash;&ndash; but
there&rsquo;s nothing much stopping me from making it available on the
<a href="http://meldmerge.org/">Meld website</a>.</p>

<p>Putting the Mallard docs online involved:</p>

<ul>
<li>Formatting the docs as HTML</li>
<li>Pulling the necessary content out of the formatted docs</li>
<li>Fixing the Mallard-generated CSS to only apply to the embedded content</li>
</ul>


<h2>Mallard to HTML</h2>

<p>While it&rsquo;s sadly not obvious that you can do this, you can use
<code>gnome-doc-utils</code> to
<a href="http://projectmallard.org/pipermail/mallard-list_projectmallard.org/2010-November/000037.html">generate fairly straightforward HTML and accompanying CSS</a>
from Mallard documentation.</p>

<pre><code>gnome-doc-tool css
gnome-doc-tool html -c index.css --copy-graphics *.page
</code></pre>

<p>You&rsquo;ll get an HTML page for each Mallard page, and it&rsquo;ll all link to the
external CSS. No drama here.</p>

<h2>Stripping the HTML</h2>

<p>The HTML generated is designed to be stand-alone. However, we want to be able
to embed it in an existing webpage. Doing the simplest and hackiest thing
available, I used BeautifulSoup to just pull out the contents of the body, add
a header for Jekyll (Meld&rsquo;s site is hosted on GitHub) and rewrite the new
&lsquo;HTML&rsquo;.</p>

<p>I added a new Jekyll layout to be used for the help pages, and wrapped the
whole help content block in a <code>#help-content</code> <code>div</code>.</p>

<h2>Massaging the CSS</h2>

<p>The generated CSS is all top-level rules and whatnot. Worse yet, it uses
<em>sensible</em> class names like &ldquo;title&rdquo;, so you&rsquo;re bound to have conflicting
classes in an existing site. Again doing the stupidest thing that would work,
I wrapped the whole CSS file in:</p>

<pre><code>#help-content {
    ...
}
</code></pre>

<p>and passed it through <a href="http://sass-lang.com/">Sass</a> as SCSS. This stopped the
help CSS messing with the main site, but the help pages themselves were all
wrong due to some messy interaction with the existing CSS reset, etc. A few
additional (evil) styling overrides:</p>

<pre><code>#help-content {
  background-color: #ffffff;
}

#help-content div.body {
  border: none !important;
}

#help-content div.headbar {
  margin: 10px !important;
}

#help-content div.footbar {
  margin: 10px !important;
}

#help-content .title {
  line-height: 1em;
}

#help-content h1 {
  font-family: sans-serif;
  font-weight: bold;
  color: black;
}

#help-content h2 {
  font-family: sans-serif;
  color: black;
}
</code></pre>

<p>and it looks pretty much like a sensibly-embedded Mallard page.</p>

<p>It&rsquo;s a pile of dirty hacks, but now at least Windows users can read our
documentation. <a href="http://meldmerge.org/help/">Check it out.</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Obligatory First Post]]></title>
    <link href="http://kaiw.github.com/blog/2012/06/06/obligatory-first-post/"/>
    <updated>2012-06-06T07:54:00+10:00</updated>
    <id>http://kaiw.github.com/blog/2012/06/06/obligatory-first-post</id>
    <content type="html"><![CDATA[<p>This blog is an attempt to consolidate the limited writing that I do.
Statistics suggest that it will probably fail.</p>
]]></content>
  </entry>
  
</feed>
